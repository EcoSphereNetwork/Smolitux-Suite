{"ast":null,"code":"import { renderSlot as _renderSlot, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", {\n    class: _normalizeClass([\"table tablesorter\", $options.tableClass])\n  }, [_createElementVNode(\"thead\", {\n    class: _normalizeClass($props.theadClasses)\n  }, [_createElementVNode(\"tr\", null, [_renderSlot(_ctx.$slots, \"columns\", {}, () => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.columns, column => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: column\n    }, _toDisplayString(column), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2 /* CLASS */), _createElementVNode(\"tbody\", {\n    class: _normalizeClass($props.tbodyClasses)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.data, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_renderSlot(_ctx.$slots, \"default\", {\n      row: item\n    }, () => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.columns, (column, index) => {\n      return _openBlock(), _createElementBlock(_Fragment, null, [$options.hasValue(item, column) ? (_openBlock(), _createElementBlock(\"td\", {\n        key: index\n      }, _toDisplayString($options.itemValue(item, column)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n    }), 256 /* UNKEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$options","tableClass","_createElementVNode","$props","theadClasses","_renderSlot","_ctx","$slots","_Fragment","_renderList","columns","column","key","_toDisplayString","tbodyClasses","data","item","index","row","hasValue","itemValue","_createCommentVNode"],"sources":["/workspace/Smolitux-Suite/src/components/BaseTable.vue"],"sourcesContent":["<template>\n  <table class=\"table tablesorter\" :class=\"tableClass\">\n    <thead :class=\"theadClasses\">\n      <tr>\n        <slot name=\"columns\">\n          <th v-for=\"column in columns\" :key=\"column\">{{ column }}</th>\n        </slot>\n      </tr>\n    </thead>\n    <tbody :class=\"tbodyClasses\">\n      <tr v-for=\"(item, index) in data\" :key=\"index\">\n        <slot :row=\"item\">\n          <template v-for=\"(column, index) in columns\">\n            <td :key=\"index\" v-if=\"hasValue(item, column)\">\n              {{ itemValue(item, column) }}\n            </td>\n          </template>\n        </slot>\n      </tr>\n    </tbody>\n  </table>\n</template>\n<script>\nexport default {\n  name: \"base-table\",\n  props: {\n    columns: {\n      type: Array,\n      default: () => [],\n      description: \"Table columns\",\n    },\n    data: {\n      type: Array,\n      default: () => [],\n      description: \"Table data\",\n    },\n    type: {\n      type: String, // striped | hover\n      default: \"\",\n      description: \"Whether table is striped or hover type\",\n    },\n    theadClasses: {\n      type: String,\n      default: \"\",\n      description: \"<thead> css classes\",\n    },\n    tbodyClasses: {\n      type: String,\n      default: \"\",\n      description: \"<tbody> css classes\",\n    },\n  },\n  computed: {\n    tableClass() {\n      return this.type && `table-${this.type}`;\n    },\n  },\n  methods: {\n    hasValue(item, column) {\n      return item[column.toLowerCase()] !== \"undefined\";\n    },\n    itemValue(item, column) {\n      return item[column.toLowerCase()];\n    },\n  },\n};\n</script>\n<style></style>\n"],"mappings":";;uBACEA,mBAAA,CAmBQ;IAnBDC,KAAK,EADdC,eAAA,EACe,mBAAmB,EAASC,QAAA,CAAAC,UAAU;MACjDC,mBAAA,CAMQ;IANAJ,KAAK,EAFjBC,eAAA,CAEmBI,MAAA,CAAAC,YAAY;MACzBF,mBAAA,CAIK,aAHHG,WAAA,CAEOC,IAAA,CAAAC,MAAA,iBAFP,MAEO,E,kBADLV,mBAAA,CAA6DW,SAAA,QALvEC,WAAA,CAK+BN,MAAA,CAAAO,OAAO,EAAjBC,MAAM;yBAAjBd,mBAAA,CAA6D;MAA9Be,GAAG,EAAED;IAAM,GAAAE,gBAAA,CAAKF,MAAM;uDAI3DT,mBAAA,CAUQ;IAVAJ,KAAK,EATjBC,eAAA,CASmBI,MAAA,CAAAW,YAAY;yBACzBjB,mBAAA,CAQKW,SAAA,QAlBXC,WAAA,CAUkCN,MAAA,CAAAY,IAAI,EAVtC,CAUkBC,IAAI,EAAEC,KAAK;yBAAvBpB,mBAAA,CAQK;MAR8Be,GAAG,EAAEK;IAAK,IAC3CZ,WAAA,CAMOC,IAAA,CAAAC,MAAA;MANAW,GAAG,EAAEF;IAAI,GAAhB,MAMO,E,kBALLnB,mBAAA,CAIWW,SAAA,QAhBrBC,WAAA,CAY8CN,MAAA,CAAAO,OAAO,EAZrD,CAY4BC,MAAM,EAAEM,KAAK;2BAZzCpB,mBAAA,CAAAW,SAAA,SAamCR,QAAA,CAAAmB,QAAQ,CAACH,IAAI,EAAEL,MAAM,K,cAA5Cd,mBAAA,CAEK;QAFAe,GAAG,EAAEK;MAAK,GAAAJ,gBAAA,CACVb,QAAA,CAAAoB,SAAS,CAACJ,IAAI,EAAEL,MAAM,qBAdvCU,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}