{"ast":null,"code":"import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDynamicComponent as _resolveDynamicComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_click_outside = _resolveDirective(\"click-outside\");\n  return _withDirectives((_openBlock(), _createBlock(_resolveDynamicComponent($props.tag), {\n    class: _normalizeClass([\"dropdown\", {\n      show: $data.isOpen\n    }]),\n    onClick: $options.toggleDropDown\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"title-container\", {\n      isOpen: $data.isOpen\n    }, () => [(_openBlock(), _createBlock(_resolveDynamicComponent($props.titleTag), {\n      class: _normalizeClass([\"dropdown-toggle btn-rotate\", $props.titleClasses]),\n      \"aria-expanded\": $data.isOpen,\n      \"aria-label\": $props.title || $props.ariaLabel,\n      \"data-toggle\": \"dropdown\"\n    }, {\n      default: _withCtx(() => [_renderSlot(_ctx.$slots, \"title\", {\n        isOpen: $data.isOpen\n      }, () => [_createElementVNode(\"i\", {\n        class: _normalizeClass($props.icon)\n      }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString($props.title), 1 /* TEXT */)])]),\n      _: 3 /* FORWARDED */\n    }, 8 /* PROPS */, [\"class\", \"aria-expanded\", \"aria-label\"]))]), _createElementVNode(\"ul\", {\n      class: _normalizeClass([\"dropdown-menu\", [{\n        show: $data.isOpen\n      }, {\n        'dropdown-menu-right': $props.menuOnRight\n      }, $props.menuClasses]])\n    }, [_renderSlot(_ctx.$slots, \"default\")], 2 /* CLASS */)]),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"class\", \"onClick\"])), [[_directive_click_outside, $options.closeDropDown]]);\n}","map":{"version":3,"names":["_createBlock","_resolveDynamicComponent","$props","tag","class","_normalizeClass","show","$data","isOpen","onClick","$options","toggleDropDown","default","_withCtx","_renderSlot","_ctx","$slots","titleTag","titleClasses","title","ariaLabel","_createElementVNode","icon","_createTextVNode","_toDisplayString","_","menuOnRight","menuClasses","closeDropDown"],"sources":["/workspace/Smolitux-Suite/src/components/BaseDropdown.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    class=\"dropdown\"\n    :class=\"{ show: isOpen }\"\n    @click=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <slot name=\"title-container\" :is-open=\"isOpen\">\n      <component\n        :is=\"titleTag\"\n        class=\"dropdown-toggle btn-rotate\"\n        :class=\"titleClasses\"\n        :aria-expanded=\"isOpen\"\n        :aria-label=\"title || ariaLabel\"\n        data-toggle=\"dropdown\"\n      >\n        <slot name=\"title\" :is-open=\"isOpen\">\n          <i :class=\"icon\"></i>\n          {{ title }}\n        </slot>\n      </component>\n    </slot>\n    <ul\n      class=\"dropdown-menu\"\n      :class=\"[\n        { show: isOpen },\n        { 'dropdown-menu-right': menuOnRight },\n        menuClasses,\n      ]\"\n    >\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  name: \"base-dropdown\",\n  props: {\n    tag: {\n      type: String,\n      default: \"div\",\n      description: \"Dropdown html tag (e.g div, ul etc)\",\n    },\n    titleTag: {\n      type: String,\n      default: \"button\",\n      description: \"Dropdown title (toggle) html tag\",\n    },\n    title: {\n      type: String,\n      description: \"Dropdown title\",\n    },\n    icon: {\n      type: String,\n      description: \"Dropdown icon\",\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: \"Title css classes\",\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: \"Menu css classes\",\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: \"Whether menu should appear on the right\",\n    },\n    ariaLabel: String,\n  },\n  data() {\n    return {\n      isOpen: false,\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit(\"change\", false);\n    },\n  },\n};\n</script>\n"],"mappings":";;;wCACEA,YAAA,CAgCYC,wBAjCd,CAESC,MAAA,CAAAC,GAAG;IACRC,KAAK,EAHTC,eAAA,EAGU,UAAU;MAAAC,IAAA,EACAC,KAAA,CAAAC;IAAM;IACrBC,OAAK,EAAEC,QAAA,CAAAC;;IALZC,OAAA,EAAAC,QAAA,CAQI,MAcO,CAdPC,WAAA,CAcOC,IAAA,CAAAC,MAAA;MAduBR,MAAO,EAAED,KAAA,CAAAC;IAAM,GAA7C,MAcO,E,cAbLR,YAAA,CAYYC,wBArBlB,CAUaC,MAAA,CAAAe,QAAQ;MACbb,KAAK,EAXbC,eAAA,EAWc,4BAA4B,EAC1BH,MAAA,CAAAgB,YAAY;MACnB,eAAa,EAAEX,KAAA,CAAAC,MAAM;MACrB,YAAU,EAAEN,MAAA,CAAAiB,KAAK,IAAIjB,MAAA,CAAAkB,SAAS;MAC/B,aAAW,EAAC;;MAfpBR,OAAA,EAAAC,QAAA,CAiBQ,MAGO,CAHPC,WAAA,CAGOC,IAAA,CAAAC,MAAA;QAHaR,MAAO,EAAED,KAAA,CAAAC;MAAM,GAAnC,MAGO,CAFLa,mBAAA,CAAqB;QAAjBjB,KAAK,EAlBnBC,eAAA,CAkBqBH,MAAA,CAAAoB,IAAI;+BAlBzBC,gBAAA,CAkB+B,GACrB,GAAAC,gBAAA,CAAGtB,MAAA,CAAAiB,KAAK,iB;MAnBlBM,CAAA;oEAuBIJ,mBAAA,CASK;MARHjB,KAAK,EAxBXC,eAAA,EAwBY,eAAe,G;cACKE,KAAA,CAAAC;MAAM,G;+BAAqCN,MAAA,CAAAwB;MAAW,GAAYxB,MAAA,CAAAyB,WAAW,C;QAMvGb,WAAA,CAAaC,IAAA,CAAAC,MAAA,a;IA/BnBS,CAAA;wEAMqBf,QAAA,CAAAkB,aAAa,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}