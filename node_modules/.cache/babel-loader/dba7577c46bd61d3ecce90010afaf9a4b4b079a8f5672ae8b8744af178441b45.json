{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row\"\n};\nconst _hoisted_2 = {\n  class: \"col-12\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"card-category\"\n};\nconst _hoisted_5 = {\n  class: \"card-title\"\n};\nconst _hoisted_6 = {\n  class: \"col-sm-6\"\n};\nconst _hoisted_7 = [\"id\"];\nconst _hoisted_8 = [\"onClick\", \"checked\"];\nconst _hoisted_9 = {\n  class: \"chart-area\"\n};\nconst _hoisted_10 = {\n  class: \"row\"\n};\nconst _hoisted_11 = {\n  class: \"card-category\"\n};\nconst _hoisted_12 = {\n  class: \"chart-area\"\n};\nconst _hoisted_13 = {\n  class: \"card-category\"\n};\nconst _hoisted_14 = {\n  class: \"chart-area\"\n};\nconst _hoisted_15 = {\n  class: \"card-category\"\n};\nconst _hoisted_16 = {\n  class: \"chart-area\"\n};\nconst _hoisted_17 = {\n  class: \"row\"\n};\nconst _hoisted_18 = {\n  class: \"col-lg-6 col-md-12\"\n};\nconst _hoisted_19 = {\n  class: \"title d-inline\"\n};\nconst _hoisted_20 = {\n  class: \"card-category d-inline\"\n};\nconst _hoisted_21 = {\n  class: \"dropdown-item\",\n  href: \"#pablo\"\n};\nconst _hoisted_22 = {\n  class: \"dropdown-item\",\n  href: \"#pablo\"\n};\nconst _hoisted_23 = {\n  class: \"dropdown-item\",\n  href: \"#pablo\"\n};\nconst _hoisted_24 = {\n  class: \"table-full-width table-responsive\"\n};\nconst _hoisted_25 = {\n  class: \"col-lg-6 col-md-12\"\n};\nconst _hoisted_26 = {\n  class: \"card-title\"\n};\nconst _hoisted_27 = {\n  class: \"table-responsive\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  const _component_card = _resolveComponent(\"card\");\n  const _component_bar_chart = _resolveComponent(\"bar-chart\");\n  const _component_base_dropdown = _resolveComponent(\"base-dropdown\");\n  const _component_task_list = _resolveComponent(\"task-list\");\n  const _component_user_table = _resolveComponent(\"user-table\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_card, {\n    type: \"chart\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"col-sm-6\", $setup.isRTL ? 'text-right' : 'text-left'])\n    }, [_createElementVNode(\"h5\", _hoisted_4, _toDisplayString(_ctx.$t(\"dashboard.totalShipments\")), 1 /* TEXT */), _createElementVNode(\"h2\", _hoisted_5, _toDisplayString(_ctx.$t(\"dashboard.performance\")), 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"btn-group btn-group-toggle\", $setup.isRTL ? 'float-left' : 'float-right']),\n      \"data-toggle\": \"buttons\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.bigLineChartCategories, (option, index) => {\n      return _openBlock(), _createElementBlock(\"label\", {\n        key: option,\n        class: _normalizeClass([\"btn btn-sm btn-primary btn-simple\", {\n          active: $setup.bigLineChart.activeIndex === index\n        }]),\n        id: index\n      }, [_createElementVNode(\"input\", {\n        type: \"radio\",\n        onClick: $event => $setup.initBigChart(index),\n        name: \"options\",\n        autocomplete: \"off\",\n        checked: $setup.bigLineChart.activeIndex === index\n      }, null, 8 /* PROPS */, _hoisted_8), _createTextVNode(\" \" + _toDisplayString(option), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_7);\n    }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)])])]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_line_chart, {\n      style: {\n        \"height\": \"100%\"\n      },\n      ref: \"bigChart\",\n      \"chart-id\": \"big-line-chart\",\n      \"chart-data\": $setup.bigLineChart.chartData,\n      \"gradient-colors\": $setup.bigLineChart.gradientColors,\n      \"gradient-stops\": $setup.bigLineChart.gradientStops,\n      \"extra-options\": $setup.bigLineChart.extraOptions\n    }, null, 8 /* PROPS */, [\"chart-data\", \"gradient-colors\", \"gradient-stops\", \"extra-options\"])])]),\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"col-lg-4\", {\n      'text-right': $setup.isRTL\n    }])\n  }, [_createVNode(_component_card, {\n    type: \"chart\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"h5\", _hoisted_11, _toDisplayString(_ctx.$t(\"dashboard.totalShipments\")), 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"h3\", {\n      class: \"card-title\"\n    }, [_createElementVNode(\"i\", {\n      class: \"tim-icons icon-bell-55 text-primary\"\n    }), _createTextVNode(\" 763,215 \")], -1 /* HOISTED */))]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_line_chart, {\n      style: {\n        \"height\": \"100%\"\n      },\n      \"chart-id\": \"purple-line-chart\",\n      \"chart-data\": $setup.purpleLineChart.chartData,\n      \"gradient-colors\": $setup.purpleLineChart.gradientColors,\n      \"gradient-stops\": $setup.purpleLineChart.gradientStops,\n      \"extra-options\": $setup.purpleLineChart.extraOptions\n    }, null, 8 /* PROPS */, [\"chart-data\", \"gradient-colors\", \"gradient-stops\", \"extra-options\"])])]),\n    _: 1 /* STABLE */\n  })], 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"col-lg-4\", {\n      'text-right': $setup.isRTL\n    }])\n  }, [_createVNode(_component_card, {\n    type: \"chart\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"h5\", _hoisted_13, _toDisplayString(_ctx.$t(\"dashboard.dailySales\")), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"h3\", {\n      class: \"card-title\"\n    }, [_createElementVNode(\"i\", {\n      class: \"tim-icons icon-delivery-fast text-info\"\n    }), _createTextVNode(\" 3,500â‚¬ \")], -1 /* HOISTED */))]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_bar_chart, {\n      style: {\n        \"height\": \"100%\"\n      },\n      \"chart-id\": \"blue-bar-chart\",\n      \"chart-data\": $setup.blueBarChart.chartData,\n      \"gradient-stops\": $setup.blueBarChart.gradientStops,\n      \"extra-options\": $setup.blueBarChart.extraOptions\n    }, null, 8 /* PROPS */, [\"chart-data\", \"gradient-stops\", \"extra-options\"])])]),\n    _: 1 /* STABLE */\n  })], 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"col-lg-4\", {\n      'text-right': $setup.isRTL\n    }])\n  }, [_createVNode(_component_card, {\n    type: \"chart\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"h5\", _hoisted_15, _toDisplayString(_ctx.$t(\"dashboard.completedTasks\")), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"h3\", {\n      class: \"card-title\"\n    }, [_createElementVNode(\"i\", {\n      class: \"tim-icons icon-send text-success\"\n    }), _createTextVNode(\" 12,100K \")], -1 /* HOISTED */))]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_16, [_createVNode(_component_line_chart, {\n      style: {\n        \"height\": \"100%\"\n      },\n      \"chart-id\": \"green-line-chart\",\n      \"chart-data\": $setup.greenLineChart.chartData,\n      \"gradient-stops\": $setup.greenLineChart.gradientStops,\n      \"extra-options\": $setup.greenLineChart.extraOptions\n    }, null, 8 /* PROPS */, [\"chart-data\", \"gradient-stops\", \"extra-options\"])])]),\n    _: 1 /* STABLE */\n  })], 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createVNode(_component_card, {\n    type: \"tasks\",\n    \"header-classes\": {\n      'text-right': $setup.isRTL\n    }\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"h6\", _hoisted_19, _toDisplayString(_ctx.$t(\"dashboard.tasks\", {\n      count: 5\n    })), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_20, _toDisplayString(_ctx.$t(\"dashboard.today\")), 1 /* TEXT */), _createVNode(_component_base_dropdown, {\n      \"menu-on-right\": \"\",\n      tag: \"div\",\n      \"title-classes\": \"btn btn-link btn-icon\",\n      \"aria-label\": \"Settings menu\",\n      class: _normalizeClass({\n        'float-left': $setup.isRTL\n      })\n    }, {\n      title: _withCtx(() => _cache[3] || (_cache[3] = [_createElementVNode(\"i\", {\n        class: \"tim-icons icon-settings-gear-63\"\n      }, null, -1 /* HOISTED */)])),\n      default: _withCtx(() => [_createElementVNode(\"a\", _hoisted_21, _toDisplayString(_ctx.$t(\"dashboard.dropdown.action\")), 1 /* TEXT */), _createElementVNode(\"a\", _hoisted_22, _toDisplayString(_ctx.$t(\"dashboard.dropdown.anotherAction\")), 1 /* TEXT */), _createElementVNode(\"a\", _hoisted_23, _toDisplayString(_ctx.$t(\"dashboard.dropdown.somethingElse\")), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"class\"])]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_24, [_createVNode(_component_task_list)])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"header-classes\"])]), _createElementVNode(\"div\", _hoisted_25, [_createVNode(_component_card, {\n    class: \"card\",\n    \"header-classes\": {\n      'text-right': $setup.isRTL\n    }\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"h4\", _hoisted_26, _toDisplayString(_ctx.$t(\"dashboard.simpleTable\")), 1 /* TEXT */)]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_27, [_createVNode(_component_user_table)])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"header-classes\"])])])]);\n}","map":{"version":3,"names":["class","href","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","_createVNode","_component_card","type","header","_withCtx","_hoisted_3","_normalizeClass","$setup","isRTL","_hoisted_4","_toDisplayString","_ctx","$t","_hoisted_5","_hoisted_6","_Fragment","_renderList","bigLineChartCategories","option","index","key","active","bigLineChart","activeIndex","id","onClick","$event","initBigChart","name","autocomplete","checked","_hoisted_8","_createTextVNode","_hoisted_7","default","_hoisted_9","_component_line_chart","style","ref","chartData","gradientColors","gradientStops","extraOptions","_","_hoisted_10","_hoisted_11","_hoisted_12","purpleLineChart","_hoisted_13","_hoisted_14","_component_bar_chart","blueBarChart","_hoisted_15","_hoisted_16","greenLineChart","_hoisted_17","_hoisted_18","_hoisted_19","count","_hoisted_20","_component_base_dropdown","tag","title","_cache","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_component_task_list","_hoisted_25","_hoisted_26","_hoisted_27","_component_user_table"],"sources":["/workspace/Smolitux-Suite/src/pages/Dashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\">\n          <template #header>\n            <div class=\"row\">\n              <div class=\"col-sm-6\" :class=\"isRTL ? 'text-right' : 'text-left'\">\n                <h5 class=\"card-category\">\n                  {{ $t(\"dashboard.totalShipments\") }}\n                </h5>\n                <h2 class=\"card-title\">{{ $t(\"dashboard.performance\") }}</h2>\n              </div>\n              <div class=\"col-sm-6\">\n                <div\n                  class=\"btn-group btn-group-toggle\"\n                  :class=\"isRTL ? 'float-left' : 'float-right'\"\n                  data-toggle=\"buttons\"\n                >\n                  <label\n                    v-for=\"(option, index) in bigLineChartCategories\"\n                    :key=\"option\"\n                    class=\"btn btn-sm btn-primary btn-simple\"\n                    :class=\"{ active: bigLineChart.activeIndex === index }\"\n                    :id=\"index\"\n                  >\n                    <input\n                      type=\"radio\"\n                      @click=\"initBigChart(index)\"\n                      name=\"options\"\n                      autocomplete=\"off\"\n                      :checked=\"bigLineChart.activeIndex === index\"\n                    />\n                    {{ option }}\n                  </label>\n                </div>\n              </div>\n            </div>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              ref=\"bigChart\"\n              chart-id=\"big-line-chart\"\n              :chart-data=\"bigLineChart.chartData\"\n              :gradient-colors=\"bigLineChart.gradientColors\"\n              :gradient-stops=\"bigLineChart.gradientStops\"\n              :extra-options=\"bigLineChart.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template #header>\n            <h5 class=\"card-category\">{{ $t(\"dashboard.totalShipments\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-bell-55 text-primary\"></i> 763,215\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              chart-id=\"purple-line-chart\"\n              :chart-data=\"purpleLineChart.chartData\"\n              :gradient-colors=\"purpleLineChart.gradientColors\"\n              :gradient-stops=\"purpleLineChart.gradientStops\"\n              :extra-options=\"purpleLineChart.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template #header>\n            <h5 class=\"card-category\">{{ $t(\"dashboard.dailySales\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-delivery-fast text-info\"></i> 3,500â‚¬\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <bar-chart\n              style=\"height: 100%\"\n              chart-id=\"blue-bar-chart\"\n              :chart-data=\"blueBarChart.chartData\"\n              :gradient-stops=\"blueBarChart.gradientStops\"\n              :extra-options=\"blueBarChart.extraOptions\"\n            >\n            </bar-chart>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template #header>\n            <h5 class=\"card-category\">{{ $t(\"dashboard.completedTasks\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-send text-success\"></i> 12,100K\n            </h3>\n          </template>\n          <div class=\"chart-area\">\n            <line-chart\n              style=\"height: 100%\"\n              chart-id=\"green-line-chart\"\n              :chart-data=\"greenLineChart.chartData\"\n              :gradient-stops=\"greenLineChart.gradientStops\"\n              :extra-options=\"greenLineChart.extraOptions\"\n            >\n            </line-chart>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-md-12\">\n        <card type=\"tasks\" :header-classes=\"{ 'text-right': isRTL }\">\n          <template #header>\n            <h6 class=\"title d-inline\">\n              {{ $t(\"dashboard.tasks\", { count: 5 }) }}\n            </h6>\n            <p class=\"card-category d-inline\">{{ $t(\"dashboard.today\") }}</p>\n            <base-dropdown\n              menu-on-right=\"\"\n              tag=\"div\"\n              title-classes=\"btn btn-link btn-icon\"\n              aria-label=\"Settings menu\"\n              :class=\"{ 'float-left': isRTL }\"\n            >\n              <template #title>\n                <i class=\"tim-icons icon-settings-gear-63\"></i>\n              </template>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{\n                $t(\"dashboard.dropdown.action\")\n              }}</a>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{\n                $t(\"dashboard.dropdown.anotherAction\")\n              }}</a>\n              <a class=\"dropdown-item\" href=\"#pablo\">{{\n                $t(\"dashboard.dropdown.somethingElse\")\n              }}</a>\n            </base-dropdown>\n          </template>\n          <div class=\"table-full-width table-responsive\">\n            <task-list></task-list>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-6 col-md-12\">\n        <card class=\"card\" :header-classes=\"{ 'text-right': isRTL }\">\n          <template #header>\n            <h4 class=\"card-title\">\n              {{ $t(\"dashboard.simpleTable\") }}\n            </h4>\n          </template>\n          <div class=\"table-responsive\">\n            <user-table></user-table>\n          </div>\n        </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport LineChart from \"@/components/Charts/LineChart\";\nimport BarChart from \"@/components/Charts/BarChart\";\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport TaskList from \"./Dashboard/TaskList\";\nimport UserTable from \"./Dashboard/UserTable\";\nimport config from \"@/config\";\n\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useRoute } from 'vue-router';\n\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    TaskList,\n    UserTable,\n  },\n  setup() {\n    const i18n = useI18n();\n    const route = useRoute();\n    const bigChart = ref(null);\n\n    const bigLineChart = ref({\n      allData: [\n        [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n        [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n        [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n      ],\n      activeIndex: 0,\n      chartData: {\n        datasets: [{}],\n        labels: [\n          \"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\",\n          \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\",\n        ],\n      },\n      extraOptions: chartConfigs.purpleChartOptions,\n      gradientColors: config.colors.primaryGradient,\n      gradientStops: [1, 0.4, 0],\n      categories: [],\n    });\n\n    const purpleLineChart = ref({\n      extraOptions: chartConfigs.purpleChartOptions,\n      chartData: {\n        labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n        datasets: [{\n          label: \"Data\",\n          fill: true,\n          borderColor: config.colors.primary,\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: config.colors.primary,\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: config.colors.primary,\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80],\n        }],\n      },\n      gradientColors: config.colors.primaryGradient,\n      gradientStops: [1, 0.2, 0],\n    });\n\n    const greenLineChart = ref({\n      extraOptions: chartConfigs.greenChartOptions,\n      chartData: {\n        labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n        datasets: [{\n          label: \"My First dataset\",\n          fill: true,\n          borderColor: config.colors.danger,\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: config.colors.danger,\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: config.colors.danger,\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80],\n        }],\n      },\n      gradientColors: [\n        \"rgba(66,134,121,0.15)\",\n        \"rgba(66,134,121,0.0)\",\n        \"rgba(66,134,121,0)\",\n      ],\n      gradientStops: [1, 0.4, 0],\n    });\n\n    const blueBarChart = ref({\n      extraOptions: chartConfigs.barChartOptions,\n      chartData: {\n        labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n        datasets: [{\n          label: \"Countries\",\n          fill: true,\n          borderColor: config.colors.info,\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45],\n        }],\n      },\n      gradientColors: config.colors.primaryGradient,\n      gradientStops: [1, 0.4, 0],\n    });\n\n    const enableRTL = computed(() => route.query.enableRTL);\n    const isRTL = computed(() => i18n.rtl);\n    const bigLineChartCategories = computed(() => i18n.t(\"dashboard.chartCategories\"));\n\n    const initBigChart = (index) => {\n      let chartData = {\n        datasets: [{\n          fill: true,\n          borderColor: config.colors.primary,\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: config.colors.primary,\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: config.colors.primary,\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: bigLineChart.value.allData[index],\n        }],\n        labels: [\n          \"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\",\n          \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\",\n        ],\n      };\n      bigChart.value.updateGradients(chartData);\n      bigLineChart.value.chartData = chartData;\n      bigLineChart.value.activeIndex = index;\n    };\n\n    onMounted(() => {\n      if (enableRTL.value) {\n        i18n.locale = \"ar\";\n        i18n.rtl = true;\n      }\n      initBigChart(0);\n    });\n\n    onBeforeUnmount(() => {\n      if (i18n.rtl) {\n        i18n.locale = \"en\";\n        i18n.rtl = false;\n      }\n    });\n\n    return {\n      bigLineChart,\n      purpleLineChart,\n      greenLineChart,\n      blueBarChart,\n      enableRTL,\n      isRTL,\n      bigLineChartCategories,\n      initBigChart,\n      bigChart,\n    };\n  },\n};\n</script>\n<style></style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}